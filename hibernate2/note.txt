1.在hibernamte 中使用c3p0 数据源：
（1）导入jar 包
F:\安装包\libs\SSH\hibernate-release-4.2.21.Final\lib\optional\c3p0
（2） 加入配置
C3P0 数据库连接池属性
hibernate.c3p0.max_size: 数据库连接池的最大连接数
hibernate.c3p0.min_size: 数据库连接池的最小连接数
hibernate.c3p0.acquire_increment: 当数据库连接池中的连接耗尽时, 同一时刻获取多少个数据库连接

hibernate.c3p0.timeout:   数据库连接池中连接对象在多长时间没有使用过后，就应该被销毁

hibernate.c3p0.idle_test_period:  
表示连接池检测线程多长时间检测一次池内的所有链接对象是否超时. 
连接池本身不会把自己从连接池中移除，而是专门有一个线程按照一定的时间间隔来做这件事，
这个线程通过比较连接对象最后一次被使用时间和当前时间的时间差来和 timeout 做对比
，进而决定是否销毁这个连接对象。 
hibernate.c3p0.max_statements:  缓存 Statement 对象的数量

2. 映射Java 的时间日期类型

（1） 两个基础知识
在 Java 中, 代表时间和日期的类型包括: java.util.Date 和 java.util.Calendar. 
此外, 在 JDBC API 中还提供了 3 个扩展了 java.util.Date 类的子类: 
java.sql.Date, java.sql.Time 和 java.sql.Timestamp, 
这三个类分别和标准 SQL 类型中的 DATE, TIME 和 TIMESTAMP 类型对应
在标准 SQL 中, DATE 类型表示日期, TIME 类型表示时间, TIMESTAMP 类型表示时间戳,
 同时包含日期和时间信息. 
（2） 如何进行映射
java.util.Date是父类，所以可以对应标准 SQL 类型中的 DATE, TIME 和 TIMESTAMP 类
所以在设置持久化类的Date 类型时候， 设置为 java.util.Date 类型
可以通过property 的type 属性进行映射：
<property name="date" type="timestamp">
      <column name="DATE" />
 </property>
<property name="date" type="date">
      <column name="DATE" />
 </property>
<property name="date" type="time">
      <column name="DATE" />
 </property>
其中timestamp ， date ， time 既不是Java 类型， 也不是标准SQL 类型，而是Hibernate 映射类型



